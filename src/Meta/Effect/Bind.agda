{-# OPTIONS --safe #-}
module Meta.Effect.Bind where

open import Foundations.Base

open import Meta.Brackets
open import Meta.Effect.Idiom public

private variable
  ‚Ñì·µÉ ‚Ñì·µá : Level
  A : Type ‚Ñì·µÉ
  B : Type ‚Ñì·µá

record Bind (M : Effect) : Typeœâ where
  private module M = Effect M
  infixl 1 _>>=_
  field
    _>>=_ : M.‚ÇÄ A ‚Üí (A ‚Üí M.‚ÇÄ B) ‚Üí M.‚ÇÄ B
    ‚¶É Idiom-bind ‚¶Ñ : Idiom M

  _>>_ : M.‚ÇÄ A ‚Üí M.‚ÇÄ B ‚Üí M.‚ÇÄ B
  _>>_ f g = f >>= Œª _ ‚Üí g

  infixr 1 _=<<_
  _=<<_ : (A ‚Üí M.‚ÇÄ B) ‚Üí M.‚ÇÄ A ‚Üí M.‚ÇÄ B
  _=<<_ f x = x >>= f

open Bind ‚¶É ... ‚¶Ñ public

instance
  Bind-Erased : Bind (eff Œª T ‚Üí Erased T)
  Bind-Erased ._>>=_ (erase x) mf .erased = mf x .erased

  Bind-Syntax : ‚àÄ {o a} {ùîΩ : Signature o a}
              ‚Üí Bind (eff (Syntax ùîΩ))
  Bind-Syntax ._>>=_ xs = ‚ü¶ xs ‚üß (mk-alg impure)
